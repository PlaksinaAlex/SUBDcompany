// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Database.Migrations
{
    [DbContext(typeof(CompanyDatabase))]
    [Migration("20220420135956_createdata")]
    partial class createdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Database.Tables.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PostName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PostRate")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Database.Tables.ProjectNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ProjectNumberName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTypeId");

                    b.ToTable("ProjectNumbers");
                });

            modelBuilder.Entity("Database.Tables.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ProjectTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ProjectTypeRate")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("Database.Tables.Purpose", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("HoursCount")
                        .HasColumnType("integer");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("workday")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Purposes");
                });

            modelBuilder.Entity("Database.Tables.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectNumberId")
                        .HasColumnType("integer");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("StaffRate")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ProjectNumberId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Database.Tables.ProjectNumber", b =>
                {
                    b.HasOne("Database.Tables.ProjectType", "ProjectType")
                        .WithMany("ProjectNumbers")
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectType");
                });

            modelBuilder.Entity("Database.Tables.Purpose", b =>
                {
                    b.HasOne("Database.Tables.Staff", "Staff")
                        .WithMany("Purposes")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Database.Tables.Staff", b =>
                {
                    b.HasOne("Database.Tables.Post", "Post")
                        .WithMany("Staffs")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Tables.ProjectNumber", "ProjectNumber")
                        .WithMany("Staffs")
                        .HasForeignKey("ProjectNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("ProjectNumber");
                });

            modelBuilder.Entity("Database.Tables.Post", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("Database.Tables.ProjectNumber", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("Database.Tables.ProjectType", b =>
                {
                    b.Navigation("ProjectNumbers");
                });

            modelBuilder.Entity("Database.Tables.Staff", b =>
                {
                    b.Navigation("Purposes");
                });
#pragma warning restore 612, 618
        }
    }
}
